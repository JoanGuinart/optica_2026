---
import Image from "astro/components/Image.astro";
import portadaData from "@data/portada.json";
---

<section class="relative min-h-screen w-full overflow-hidden bg-gradient-to-br from-slate-50 via-white to-gray-100 dark:bg-gradient-to-br dark:from-slate-900 dark:via-slate-800 dark:to-slate-900">
  {/* Imagen de fondo con overlay */}
  <div class="absolute inset-0">
    {/* Puedes reemplazar esta URL por una imagen local en /public */}
    <Image
      width={portadaData.hero.image.width}
      height={portadaData.hero.image.height}
      priority
      fetchpriority="high"
      loading="eager"
      src={portadaData.hero.image.src}
      alt={portadaData.hero.image.alt}
      class="object-cover object-center opacity-40 dark:opacity-100"
      style={{
        maskImage: "linear-gradient(to bottom, black 50%, transparent 100%)",
        WebkitMaskImage:
          "linear-gradient(to bottom, black 50%, transparent 100%)",
      }}
    />
    {/* Overlay más fuerte para mejor contraste */}
    <div
      class="absolute inset-0 bg-gradient-to-br from-white/70 via-gray-200/50 to-slate-100/60 dark:from-slate-900/85 dark:via-slate-800/70 dark:to-slate-900/60"
    >
    </div>
    {/* Gradiente de fusión hacia el siguiente bloque */}
    <div
      class="absolute bottom-0 left-0 right-0 h-32 sm:h-40 lg:h-48 bg-gradient-to-b from-transparent via-gray-200 to-gray-300 dark:via-slate-800 dark:to-slate-900"
    >
    </div>
  </div>

  {/* Contenido principal */}
  <div
    class="relative z-10 flex min-h-screen items-center justify-center py-8 px-4 sm:px-8 lg:px-12"
  >
    <div class="max-w-5xl text-center text-slate-800 dark:text-white">
      <div class="mb-6 sm:mb-8 lg:mb-12">
        <h1
          class="text-4xl font-black tracking-tight sm:text-6xl md:text-7xl lg:text-8xl xl:text-9xl mb-3 sm:mb-6 font-sans"
        >
          <span
            class="block text-slate-800 dark:text-white drop-shadow-[0_8px_32px_rgba(0,0,0,0.3)] dark:drop-shadow-[0_8px_32px_rgba(0,0,0,0.8)]"
            >{portadaData.hero.title.main}</span
          >
          <span
            class="block text-emerald-600 dark:text-emerald-400 drop-shadow-[0_8px_32px_rgba(0,0,0,0.3)] dark:drop-shadow-[0_8px_32px_rgba(0,0,0,0.8)] font-black tracking-tighter"
            >{portadaData.hero.title.highlight}</span
          >
        </h1>
      </div>

      <p
        class="text-lg sm:text-2xl md:text-3xl lg:text-4xl font-bold mb-6 sm:mb-8 lg:mb-12 text-slate-700 dark:text-white max-w-3xl mx-auto leading-tight drop-shadow-[0_4px_16px_rgba(0,0,0,0.3)] dark:drop-shadow-[0_4px_16px_rgba(0,0,0,0.8)] tracking-wide"
      >
        {portadaData.hero.tagline.main} <span class="text-emerald-600 dark:text-emerald-400">{portadaData.hero.tagline.highlight}</span>
      </p>

      <p
        class="text-sm sm:text-lg md:text-xl lg:text-2xl font-medium mb-8 sm:mb-12 lg:mb-16 text-slate-600 dark:text-white/95 max-w-2xl mx-auto leading-relaxed drop-shadow-lg"
      >
        {portadaData.hero.subtitle}
      </p>

      {/* Beneficios clave */}
      <div
        class="grid grid-cols-1 sm:grid-cols-3 gap-3 sm:gap-6 mb-8 sm:mb-12 lg:mb-16 text-slate-700 dark:text-white"
      >
        {portadaData.benefits.map((benefit) => (
          <div
            class="flex flex-col items-center p-3 sm:p-6 bg-white/60 dark:bg-slate-800/40 rounded-lg sm:rounded-xl backdrop-blur-md border border-emerald-500/30 dark:border-emerald-400/20"
          >
            <div
              class="w-12 h-12 sm:w-16 sm:h-16 mb-2 sm:mb-4 flex items-center justify-center bg-emerald-600 dark:bg-emerald-500 rounded-lg sm:rounded-xl shadow-lg"
            >
              <svg
                class="w-6 h-6 sm:w-8 sm:h-8 text-white"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width={2}
                  d={benefit.iconPath}></path>
              </svg>
            </div>
            <p class="text-sm sm:text-lg font-bold tracking-wide text-center">
              {benefit.title}
            </p>
          </div>
        ))}
      </div>

      {/* Botones de acción */}
      <div
        class="flex flex-col sm:flex-row gap-3 sm:gap-6 justify-center items-center mb-8 sm:mb-12 lg:mb-16"
      >
        {portadaData.buttons.map((button) => (
          <button
            class="cursor-pointer border-2 sm:border-3 border-emerald-600 dark:border-emerald-400 hover:border-emerald-500 dark:hover:border-emerald-300 text-slate-800 dark:text-white hover:bg-emerald-600/20 dark:hover:bg-emerald-600/20 px-8 sm:px-12 py-3 sm:py-5 rounded-lg font-bold text-lg sm:text-xl tracking-wide transition-all duration-300 backdrop-blur-sm w-full sm:w-auto"
          >
            {button.text}
          </button>
        ))}
      </div>

      {/* Información de contacto rápido */}
      <div class="text-slate-600 dark:text-white/80 text-sm sm:text-lg">
        <p class="mb-2 sm:mb-3 font-semibold">
          {portadaData.contact.location.text}
        </p>
        <p class="font-medium text-xs sm:text-base">
          {portadaData.contact.info.text
            .replace('{phone}', portadaData.contact.info.phone)
            .replace('{email}', portadaData.contact.info.email)}
        </p>
      </div>
    </div>
  </div>

  {
    /* Indicador de scroll hacia abajo - solo en desktop
      <div class="hidden sm:block absolute bottom-8 left-1/2 transform -translate-x-1/2 text-white/60 animate-bounce">
        <svg class="w-6 h-6 sm:w-8 sm:h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M19 14l-7 7m0 0l-7-7m7 7V3" />
        </svg>
      </div> */
  }
</section>
